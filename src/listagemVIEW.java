
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Andrés Felipe González García
 */
public class listagemVIEW extends javax.swing.JFrame {

    cadastroVIEW cadastroView;
    ProdutosDAO produtosDAO = new ProdutosDAO();
    
    public listagemVIEW(cadastroVIEW cadastroView) {
        initComponents();
        cadastroView = this.cadastroView;
        listarProdutos(produtosDAO.listaDeProdutos());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Scroll_listagem = new javax.swing.JScrollPane();
        Tbl_listaProdutos = new javax.swing.JTable();
        Lbl_listaProdutos = new javax.swing.JLabel();
        Lbl_venderProdutoId = new javax.swing.JLabel();
        Scroll_venderProduto = new javax.swing.JScrollPane();
        id_produto_venda = new javax.swing.JTextPane();
        btnVender = new javax.swing.JButton();
        separadorInferior = new javax.swing.JSeparator();
        btnVendas = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tbl_listaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Valor", "Status"
            }
        ));
        Scroll_listagem.setViewportView(Tbl_listaProdutos);

        Lbl_listaProdutos.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        Lbl_listaProdutos.setText("Lista de Produtos");

        Lbl_venderProdutoId.setFont(new java.awt.Font("Lucida Fax", 0, 14)); // NOI18N
        Lbl_venderProdutoId.setText("Vender Produto (ID)");

        Scroll_venderProduto.setViewportView(id_produto_venda);

        btnVender.setText("Vender");
        btnVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenderActionPerformed(evt);
            }
        });

        btnVendas.setText("Consultar Vendas");
        btnVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendasActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Lbl_venderProdutoId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Scroll_venderProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVender))
                    .addComponent(Scroll_listagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnVoltar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(separadorInferior, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Lbl_listaProdutos)
                .addGap(193, 193, 193))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(Lbl_listaProdutos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Scroll_listagem, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Lbl_venderProdutoId)
                    .addComponent(Scroll_venderProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVender))
                .addGap(29, 29, 29)
                .addComponent(separadorInferior, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVendas)
                    .addComponent(btnVoltar))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenderActionPerformed
        
        if (validaId()){
            String id = id_produto_venda.getText().trim();
            ProdutosDAO produtosdao = new ProdutosDAO();
        
            produtosdao.venderProduto(this,Integer.parseInt(id));
            listarProdutos(produtosDAO.listaDeProdutos());
            JOptionPane.showMessageDialog(this, "Status atualizado com sucesso");
            
        } else {
            JOptionPane.showMessageDialog(this, "Deve inserir um identificador (número positivo) no campo Id");
        }
        
    }//GEN-LAST:event_btnVenderActionPerformed

    private void btnVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendasActionPerformed
        vendasVIEW vendas = new vendasVIEW(this); 
        vendas.setVisible(true);
    }//GEN-LAST:event_btnVendasActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Lbl_listaProdutos;
    private javax.swing.JLabel Lbl_venderProdutoId;
    private javax.swing.JScrollPane Scroll_listagem;
    private javax.swing.JScrollPane Scroll_venderProduto;
    private javax.swing.JTable Tbl_listaProdutos;
    private javax.swing.JButton btnVendas;
    private javax.swing.JButton btnVender;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JTextPane id_produto_venda;
    private javax.swing.JSeparator separadorInferior;
    // End of variables declaration//GEN-END:variables

    private void listarProdutos(List<ProdutosDTO> lista){
        try {
            String [] columns = {"Id","Nome","Valor","Status"};
        
            ProdutosDAO produtosDAO = new ProdutosDAO();

            if (produtosDAO.contarProdutos()){//Verificamos primeiro se a lista já tem elementos, pois se estiver vazia não precisa atualizar

                DefaultTableModel tablaModelo = new DefaultTableModel(columns, 0); //A cada atualização é criado o modelo novamente

                Tbl_listaProdutos.setRowSorter(new TableRowSorter(tablaModelo));// Para conseguir por ordem crescente ou decrescente na tabela

                for(ProdutosDTO product : lista){
                //Cria-se um vetor e adiciona-se os produtos para depois adicioná-los à tabela 
                    Object [] vetorProdutos = new Object[] {
                        product.getId(),
                        product.getNome(),
                        product.getValor(),
                        product.getStatus()
                    };
                tablaModelo.addRow(vetorProdutos);
                }
                Tbl_listaProdutos.setModel(tablaModelo);
            }else{//Se a lista de consultas está vazia
                DefaultTableModel tablaModelo = new DefaultTableModel( columns, 0);
                Tbl_listaProdutos.setModel(tablaModelo);
                JOptionPane.showMessageDialog(null, "Não tem produtos para serem listados");
            }
        } catch (Exception e) {
        }
    
    }
    
    public Object obterId(){
        /*
        Obtendo a fila selecionada na tabela, se o resultado for -1 é porque nada foi selecionado
        */
        int fila = Tbl_listaProdutos.getSelectedRow(); 
        Object Id = Tbl_listaProdutos.getValueAt(fila, 0);
        
        return Id;
    }
    
    public boolean idVazio(){
        return id_produto_venda.getText().trim().isEmpty();
    }
    
    public boolean validaId(){//Validando a entrada do Id para vender produto
    
        boolean valido = false;
        
        if (!idVazio()) {
            String entradaId = id_produto_venda.getText().trim();
            boolean validaId = entradaId.matches("[0-9]{1,3}");
            if (validaId == true) {
                valido = true;
            }
        }
        return valido;
    }
    
}
